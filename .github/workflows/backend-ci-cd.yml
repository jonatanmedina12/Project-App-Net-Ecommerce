name: Backend CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Display structure
      run: ls -R

    - name: Restore dependencies
      run: |
        # Ajusta esta ruta al directorio donde se encuentra tu archivo .csproj o .sln
        cd ./Backend/Api  # Ajusta esto según la estructura de tu proyecto
        dotnet restore

    - name: Build
      run: |
        cd ./Api/Api
        dotnet build --no-restore

    - name: Test
      run: |
        cd ./Api/Api
        dotnet test --no-build --verbosity normal

    - name: Publish
      run: |
        cd ./Api/Api
        dotnet publish -c Release -o ../../publish

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: backend-artifact
        path: publish

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: backend-artifact

    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment"
        # Aquí irían los comandos para desplegar a tu entorno de staging

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}